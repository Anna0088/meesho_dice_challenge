version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: meesho_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - meesho-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - meesho-network

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    networks:
      - meesho-network

  # TimescaleDB for time-series data
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_USER: timescale
      POSTGRES_PASSWORD: timescale
      POSTGRES_DB: meesho_metrics
    ports:
      - "5433:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
    networks:
      - meesho-network

  # Elasticsearch for search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      - meesho-network

  # API Gateway
  gateway:
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
    depends_on:
      - redis
    networks:
      - meesho-network

  # Seller Service
  seller-service:
    build:
      context: ./services/seller-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: meesho_sellers
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_URL: amqp://admin:admin@rabbitmq:5672
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - meesho-network

  # Review Service
  review-service:
    build:
      context: ./services/review-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      PORT: 3002
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: meesho_reviews
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_URL: amqp://admin:admin@rabbitmq:5672
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - meesho-network

  # Loyalty Service
  loyalty-service:
    build:
      context: ./services/loyalty-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: development
      PORT: 3003
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: meesho_loyalty
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_URL: amqp://admin:admin@rabbitmq:5672
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - meesho-network

  # Analytics Service
  analytics-service:
    build:
      context: ./services/analytics-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      NODE_ENV: development
      PORT: 3004
      TIMESCALE_HOST: timescaledb
      TIMESCALE_PORT: 5432
      TIMESCALE_USER: timescale
      TIMESCALE_PASSWORD: timescale
      TIMESCALE_DB: meesho_metrics
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_URL: amqp://admin:admin@rabbitmq:5672
      ELASTIC_URL: http://elasticsearch:9200
    depends_on:
      - timescaledb
      - redis
      - rabbitmq
      - elasticsearch
    networks:
      - meesho-network

networks:
  meesho-network:
    driver: bridge

volumes:
  postgres_data:
  timescale_data:
  elastic_data: